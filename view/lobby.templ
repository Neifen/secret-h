package view

import (
	"fmt"
	"github.com/Neifen/secret-h/entities"
	"github.com/labstack/echo/v4"
)

templ lobby(game *entities.Game, players map[string]*entities.Player, thisPlayer *entities.Player) {
	<div class="w-full max-w-md bg-gray-800 rounded-lg shadow-lg p-6 border border-green-500/30">
		<h1 class="text-2xl font-bold text-center text-green-400 mb-2 tracking-wider">Secret-H </h1>
		<div class="flex justify-center gap-4">
		<p class="text-center text-green-300 mb-6">> Lobby Code: { game.Code }</p> 
		{{ qrUrl := fmt.Sprintf("/lobby-qr/%s", game.Code) }}
		<a hx-post={qrUrl} hx-swap="none" class="cursor-pointer !important">
		<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="2" y="2" width="6" height="6" fill="#9ae6b4"/>
                  <rect x="10" y="2" width="2" height="2" fill="#9ae6b4"/>
                  <rect x="16" y="2" width="6" height="6" fill="#9ae6b4"/>
                  <rect x="2" y="10" width="2" height="2" fill="#9ae6b4"/>
                  <rect x="10" y="10" width="4" height="4" fill="#9ae6b4"/>
                  <rect x="20" y="10" width="2" height="2" fill="#9ae6b4"/>
                  <rect x="2" y="16" width="6" height="6" fill="#9ae6b4"/>
                  <rect x="10" y="20" width="2" height="2" fill="#9ae6b4"/>
                  <rect x="16" y="16" width="2" height="2" fill="#9ae6b4"/>
                  <rect x="20" y="20" width="2" height="2" fill="#9ae6b4"/>
                </svg>
            </a>
		</div>
		<div class="mb-6">
			<h2 class="text-lg text-green-300 mb-4">> Players</h2>
			<ul class="space-y-3" id="player-list">
				<li class="flex items-center justify-between bg-gray-700 p-2 rounded-md border-2 border-green-500" id={thisPlayer.Uid}>
					<span class="text-green-300 font-bold">{ thisPlayer.Name } (you)</span>
					<div class="flex gap-2">
						{{ ownVoteUrl := fmt.Sprintf("/vote/%s/%s/%s", game.Code, thisPlayer.Uid, thisPlayer.Uid) }}
						<button hx-post={ ownVoteUrl } hx-swap="none" class="bg-green-500/20 text-green-300 px-3 py-1 rounded-md border border-green-500/50 hover:bg-green-500/40 transition-colors">Vote</button>
					</div>
				</li>
				for uid, p := range players {
					if uid == thisPlayer.Uid {
						{{ continue }}
					}
                    {{liId := fmt.Sprintf("id%s",p.Uid)}}
					<li class="flex items-center justify-between bg-gray-900 p-2 rounded-md border border-green-500/50" id={liId}>
						<span class="text-green-300">{ p.Name }</span>
						<div class="flex gap-2">
							{{ voteUrl := fmt.Sprintf("/vote/%s/%s/%s", game.Code, thisPlayer.Uid, p.Uid) }}
							{{ killUrl := fmt.Sprintf("/kill/%s/%s", game.Code, p.Uid) }}
							<button hx-post={ voteUrl } hx-swap="none" class="bg-green-500/20 text-green-300 px-3 py-1 rounded-md border border-green-500/50 hover:bg-green-500/40 transition-colors">Vote</button>
							<button hx-post={ killUrl } hx-swap="none" class="bg-green-500/20 text-green-300 px-3 py-1 rounded-md border border-green-500/50 hover:bg-green-500/40 transition-colors">Kill</button>
						</div>
					</li>
				}
			</ul>
		</div>
		<div class="text-center">
			{{ confirmUrl := fmt.Sprintf("/leave/%s/%s", game.Code, thisPlayer.Uid) }}
			<button hx-post={ confirmUrl } hx-swap="none" class="text-green-300 text-sm bg-gray-900/50 p-2 rounded-md border border-green-500/30 hover:bg-green-500/20 transition-colors">> Leave Game</button>
		</div>
		{{ wsUrl := fmt.Sprintf("/ws/%s/%s", game.Code, thisPlayer.Uid) }}
		<div hx-ext="ws" ws-connect={wsUrl} hx-target="messages"></div>
	</div>
}

func RenderViewLobby(c echo.Context, game *entities.Game,players map[string]*entities.Player, player *entities.Player) error {
	return renderView(c, viewLobby(game,players, player))
}

templ viewLobby(game *entities.Game,players map[string]*entities.Player, player *entities.Player) {
	@base() {
		@lobby(game,players, player)
	}
}
